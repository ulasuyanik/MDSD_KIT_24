/*
 * generated by Xtext 2.34.0
 */
package org.xtext.example.mydsl.serializer;

import com.google.inject.Inject;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AlternativeAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

@SuppressWarnings("all")
public class MyDslSyntacticSequencer extends AbstractSyntacticSequencer {

	protected MyDslGrammarAccess grammarAccess;
	protected AbstractElementAlias match_EAllocationViewType_EAssemblyViewType_EEnvironmentViewType_ERepositoryViewType___EAllocationViewTypeKeyword_0_LessThanSignLessThanSignKeyword_1_GreaterThanSignGreaterThanSignKeyword_3___or___EAssemblyViewTypeKeyword_0_LessThanSignLessThanSignKeyword_1_GreaterThanSignGreaterThanSignKeyword_4___or___EEnvironmentViewTypeKeyword_0_LessThanSignLessThanSignKeyword_1_GreaterThanSignGreaterThanSignKeyword_4___or___ERepositoryViewTypeKeyword_0_LessThanSignLessThanSignKeyword_1_GreaterThanSignGreaterThanSignKeyword_4__;
	protected AbstractElementAlias match_EProvidedRole_ERequiredRole___EProvidedRoleKeyword_0_LessThanSignLessThanSignKeyword_1_GreaterThanSignGreaterThanSignKeyword_4___or___ERequiredRoleKeyword_0_LessThanSignLessThanSignKeyword_1_GreaterThanSignGreaterThanSignKeyword_4__;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (MyDslGrammarAccess) access;
		match_EAllocationViewType_EAssemblyViewType_EEnvironmentViewType_ERepositoryViewType___EAllocationViewTypeKeyword_0_LessThanSignLessThanSignKeyword_1_GreaterThanSignGreaterThanSignKeyword_3___or___EAssemblyViewTypeKeyword_0_LessThanSignLessThanSignKeyword_1_GreaterThanSignGreaterThanSignKeyword_4___or___EEnvironmentViewTypeKeyword_0_LessThanSignLessThanSignKeyword_1_GreaterThanSignGreaterThanSignKeyword_4___or___ERepositoryViewTypeKeyword_0_LessThanSignLessThanSignKeyword_1_GreaterThanSignGreaterThanSignKeyword_4__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getEAllocationViewTypeAccess().getEAllocationViewTypeKeyword_0()), new TokenAlias(false, false, grammarAccess.getEAllocationViewTypeAccess().getLessThanSignLessThanSignKeyword_1()), new TokenAlias(false, false, grammarAccess.getEAllocationViewTypeAccess().getGreaterThanSignGreaterThanSignKeyword_3())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getEAssemblyViewTypeAccess().getEAssemblyViewTypeKeyword_0()), new TokenAlias(false, false, grammarAccess.getEAssemblyViewTypeAccess().getLessThanSignLessThanSignKeyword_1()), new TokenAlias(false, false, grammarAccess.getEAssemblyViewTypeAccess().getGreaterThanSignGreaterThanSignKeyword_4())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getEEnvironmentViewTypeAccess().getEEnvironmentViewTypeKeyword_0()), new TokenAlias(false, false, grammarAccess.getEEnvironmentViewTypeAccess().getLessThanSignLessThanSignKeyword_1()), new TokenAlias(false, false, grammarAccess.getEEnvironmentViewTypeAccess().getGreaterThanSignGreaterThanSignKeyword_4())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getERepositoryViewTypeAccess().getERepositoryViewTypeKeyword_0()), new TokenAlias(false, false, grammarAccess.getERepositoryViewTypeAccess().getLessThanSignLessThanSignKeyword_1()), new TokenAlias(false, false, grammarAccess.getERepositoryViewTypeAccess().getGreaterThanSignGreaterThanSignKeyword_4())));
		match_EProvidedRole_ERequiredRole___EProvidedRoleKeyword_0_LessThanSignLessThanSignKeyword_1_GreaterThanSignGreaterThanSignKeyword_4___or___ERequiredRoleKeyword_0_LessThanSignLessThanSignKeyword_1_GreaterThanSignGreaterThanSignKeyword_4__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getEProvidedRoleAccess().getEProvidedRoleKeyword_0()), new TokenAlias(false, false, grammarAccess.getEProvidedRoleAccess().getLessThanSignLessThanSignKeyword_1()), new TokenAlias(false, false, grammarAccess.getEProvidedRoleAccess().getGreaterThanSignGreaterThanSignKeyword_4())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getERequiredRoleAccess().getERequiredRoleKeyword_0()), new TokenAlias(false, false, grammarAccess.getERequiredRoleAccess().getLessThanSignLessThanSignKeyword_1()), new TokenAlias(false, false, grammarAccess.getERequiredRoleAccess().getGreaterThanSignGreaterThanSignKeyword_4())));
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		return "";
	}
	
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_EAllocationViewType_EAssemblyViewType_EEnvironmentViewType_ERepositoryViewType___EAllocationViewTypeKeyword_0_LessThanSignLessThanSignKeyword_1_GreaterThanSignGreaterThanSignKeyword_3___or___EAssemblyViewTypeKeyword_0_LessThanSignLessThanSignKeyword_1_GreaterThanSignGreaterThanSignKeyword_4___or___EEnvironmentViewTypeKeyword_0_LessThanSignLessThanSignKeyword_1_GreaterThanSignGreaterThanSignKeyword_4___or___ERepositoryViewTypeKeyword_0_LessThanSignLessThanSignKeyword_1_GreaterThanSignGreaterThanSignKeyword_4__.equals(syntax))
				emit_EAllocationViewType_EAssemblyViewType_EEnvironmentViewType_ERepositoryViewType___EAllocationViewTypeKeyword_0_LessThanSignLessThanSignKeyword_1_GreaterThanSignGreaterThanSignKeyword_3___or___EAssemblyViewTypeKeyword_0_LessThanSignLessThanSignKeyword_1_GreaterThanSignGreaterThanSignKeyword_4___or___EEnvironmentViewTypeKeyword_0_LessThanSignLessThanSignKeyword_1_GreaterThanSignGreaterThanSignKeyword_4___or___ERepositoryViewTypeKeyword_0_LessThanSignLessThanSignKeyword_1_GreaterThanSignGreaterThanSignKeyword_4__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_EProvidedRole_ERequiredRole___EProvidedRoleKeyword_0_LessThanSignLessThanSignKeyword_1_GreaterThanSignGreaterThanSignKeyword_4___or___ERequiredRoleKeyword_0_LessThanSignLessThanSignKeyword_1_GreaterThanSignGreaterThanSignKeyword_4__.equals(syntax))
				emit_EProvidedRole_ERequiredRole___EProvidedRoleKeyword_0_LessThanSignLessThanSignKeyword_1_GreaterThanSignGreaterThanSignKeyword_4___or___ERequiredRoleKeyword_0_LessThanSignLessThanSignKeyword_1_GreaterThanSignGreaterThanSignKeyword_4__(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('ERepositoryViewType' '&lt;&lt;' '&gt;&gt;') | ('EAssemblyViewType' '&lt;&lt;' '&gt;&gt;') | ('EAllocationViewType' '&lt;&lt;' '&gt;&gt;') | ('EEnvironmentViewType' '&lt;&lt;' '&gt;&gt;')
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 
	 * </pre>
	 */
	protected void emit_EAllocationViewType_EAssemblyViewType_EEnvironmentViewType_ERepositoryViewType___EAllocationViewTypeKeyword_0_LessThanSignLessThanSignKeyword_1_GreaterThanSignGreaterThanSignKeyword_3___or___EAssemblyViewTypeKeyword_0_LessThanSignLessThanSignKeyword_1_GreaterThanSignGreaterThanSignKeyword_4___or___EEnvironmentViewTypeKeyword_0_LessThanSignLessThanSignKeyword_1_GreaterThanSignGreaterThanSignKeyword_4___or___ERepositoryViewTypeKeyword_0_LessThanSignLessThanSignKeyword_1_GreaterThanSignGreaterThanSignKeyword_4__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('ERequiredRole' '&lt;&lt;' '&gt;&gt;') | ('EProvidedRole' '&lt;&lt;' '&gt;&gt;')
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 
	 * </pre>
	 */
	protected void emit_EProvidedRole_ERequiredRole___EProvidedRoleKeyword_0_LessThanSignLessThanSignKeyword_1_GreaterThanSignGreaterThanSignKeyword_4___or___ERequiredRoleKeyword_0_LessThanSignLessThanSignKeyword_1_GreaterThanSignGreaterThanSignKeyword_4__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
